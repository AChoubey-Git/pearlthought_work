
LENOVO@Amitav_PC MINGW64 ~
$ pwd
/c/Users/LENOVO

LENOVO@Amitav_PC MINGW64 ~
$ cd desktop

LENOVO@Amitav_PC MINGW64 ~/desktop
$ ls
 µTorrent.lnk*                 'Internet Download Manager.lnk'*   Slack.lnk*
 Codelogicx/                   'Microsoft Teams.lnk'*             Study/
 desktop.ini                   'MPC-HC x64.lnk'*                  ZeeNews.lnk*
'eclipse.exe - Shortcut.lnk'*  'pgAdmin 4.lnk'*
'Google Chrome.lnk'*            Postman.lnk*

LENOVO@Amitav_PC MINGW64 ~/desktop
$ ls -h
 µTorrent.lnk*                 'Internet Download Manager.lnk'*   Slack.lnk*
 Codelogicx/                   'Microsoft Teams.lnk'*             Study/
 desktop.ini                   'MPC-HC x64.lnk'*                  ZeeNews.lnk*
'eclipse.exe - Shortcut.lnk'*  'pgAdmin 4.lnk'*
'Google Chrome.lnk'*            Postman.lnk*

LENOVO@Amitav_PC MINGW64 ~/desktop
$ ls -list
total 45
 2251799814254053 4 drwxr-xr-x 1 LENOVO 197609    0 Sep 16 19:14  Codelogicx/
10696049115515433 0 drwxr-xr-x 1 LENOVO 197609    0 Sep 13 10:38  Study/
 1688849860903917 4 -rwxr-xr-x 1 LENOVO 197609 2211 Sep  1 14:51  Slack.lnk*
53761720551776347 4 -rwxr-xr-x 1 LENOVO 197609 2179 Aug  8 09:09  Postman.lnk*
 7881299348353651 4 -rwxr-xr-x 1 LENOVO 197609  634 Apr 27 06:04 'eclipse.exe - Shortcut.lnk'*
 5629499534603986 4 -rwxr-xr-x 1 LENOVO 197609 2339 Mar 15  2021 'Google Chrome.lnk'*
  844424930153180 1 -rw-r--r-- 1 LENOVO 197609  282 Mar 15  2021  desktop.ini
17451448556074251 4 -rwxr-xr-x 1 LENOVO 197609 2368 Feb 22  2021 'Microsoft Teams.lnk'*
 8444249301561685 4 -rwxr-xr-x 1 LENOVO 197609 1247 Oct  3  2020 'pgAdmin 4.lnk'*
 1688849860766342 4 -rwxr-xr-x 1 LENOVO 197609 1085 Dec 20  2019 'Internet Download Manager.lnk'*
 1688849860281699 4 -rwxr-xr-x 1 LENOVO 197609 1752 Oct 16  2019 'MPC-HC x64.lnk'*
 4222124650886597 4 -rwxr-xr-x 1 LENOVO 197609 2688 Sep 17  2019  ZeeNews.lnk*
 1125899907001864 4 -rwxr-xr-x 1 LENOVO 197609  904 Sep 27  2018  µTorrent.lnk*

LENOVO@Amitav_PC MINGW64 ~/desktop
$ ls -help
ls: unknown option -- e
Try 'ls --help' for more information.

LENOVO@Amitav_PC MINGW64 ~/desktop
$ ls --help
Usage: ls [OPTION]... [FILE]...
List information about the FILEs (the current directory by default).
Sort entries alphabetically if none of -cftuvSUX nor --sort is specified.

Mandatory arguments to long options are mandatory for short options too.
  -a, --all                  do not ignore entries starting with .
  -A, --almost-all           do not list implied . and ..
      --author               with -l, print the author of each file
  -b, --escape               print C-style escapes for nongraphic characters
      --block-size=SIZE      with -l, scale sizes by SIZE when printing them;
                               e.g., '--block-size=M'; see SIZE format below
  -B, --ignore-backups       do not list implied entries ending with ~
  -c                         with -lt: sort by, and show, ctime (time of last
                               modification of file status information);
                               with -l: show ctime and sort by name;
                               otherwise: sort by ctime, newest first
  -C                         list entries by columns
      --color[=WHEN]         colorize the output; WHEN can be 'always' (default
                               if omitted), 'auto', or 'never'; more info below
  -d, --directory            list directories themselves, not their contents
  -D, --dired                generate output designed for Emacs' dired mode
  -f                         do not sort, enable -aU, disable -ls --color
  -F, --classify             append indicator (one of */=>@|) to entries
      --file-type            likewise, except do not append '*'
      --format=WORD          across -x, commas -m, horizontal -x, long -l,
                               single-column -1, verbose -l, vertical -C
      --full-time            like -l --time-style=full-iso
  -g                         like -l, but do not list owner
      --group-directories-first
                             group directories before files;
                               can be augmented with a --sort option, but any
                               use of --sort=none (-U) disables grouping
  -G, --no-group             in a long listing, don't print group names
  -h, --human-readable       with -l and -s, print sizes like 1K 234M 2G etc.
      --si                   likewise, but use powers of 1000 not 1024
  -H, --dereference-command-line
                             follow symbolic links listed on the command line
      --dereference-command-line-symlink-to-dir
                             follow each command line symbolic link
                               that points to a directory
      --hide=PATTERN         do not list implied entries matching shell PATTERN
                               (overridden by -a or -A)
      --hyperlink[=WHEN]     hyperlink file names; WHEN can be 'always'
                               (default if omitted), 'auto', or 'never'
      --indicator-style=WORD  append indicator with style WORD to entry names:
                               none (default), slash (-p),
                               file-type (--file-type), classify (-F)
  -i, --inode                print the index number of each file
  -I, --ignore=PATTERN       do not list implied entries matching shell PATTERN
  -k, --kibibytes            default to 1024-byte blocks for disk usage;
                               used only with -s and per directory totals
  -l                         use a long listing format
  -L, --dereference          when showing file information for a symbolic
                               link, show information for the file the link
                               references rather than for the link itself
  -m                         fill width with a comma separated list of entries
  -n, --numeric-uid-gid      like -l, but list numeric user and group IDs
  -N, --literal              print entry names without quoting
  -o                         like -l, but do not list group information
  -p, --indicator-style=slash
                             append / indicator to directories
  -q, --hide-control-chars   print ? instead of nongraphic characters
      --show-control-chars   show nongraphic characters as-is (the default,
                               unless program is 'ls' and output is a terminal)
  -Q, --quote-name           enclose entry names in double quotes
      --quoting-style=WORD   use quoting style WORD for entry names:
                               literal, locale, shell, shell-always,
                               shell-escape, shell-escape-always, c, escape
                               (overrides QUOTING_STYLE environment variable)
  -r, --reverse              reverse order while sorting
  -R, --recursive            list subdirectories recursively
  -s, --size                 print the allocated size of each file, in blocks
  -S                         sort by file size, largest first
      --sort=WORD            sort by WORD instead of name: none (-U), size (-S),
                               time (-t), version (-v), extension (-X)
      --time=WORD            change the default of using modification times;
                               access time (-u): atime, access, use;
                               change time (-c): ctime, status;
                               birth time: birth, creation;
                             with -l, WORD determines which time to show;
                             with --sort=time, sort by WORD (newest first)
      --time-style=TIME_STYLE  time/date format with -l; see TIME_STYLE below
  -t                         sort by time, newest first; see --time
  -T, --tabsize=COLS         assume tab stops at each COLS instead of 8
  -u                         with -lt: sort by, and show, access time;
                               with -l: show access time and sort by name;
                               otherwise: sort by access time, newest first
  -U                         do not sort; list entries in directory order
  -v                         natural sort of (version) numbers within text
  -w, --width=COLS           set output width to COLS.  0 means no limit
  -x                         list entries by lines instead of by columns
  -X                         sort alphabetically by entry extension
  -Z, --context              print any security context of each file
  -1                         list one file per line.  Avoid '\n' with -q or -b
      --append-exe           append .exe if cygwin magic was needed
      --help     display this help and exit
      --version  output version information and exit

The SIZE argument is an integer and optional unit (example: 10K is 10*1024).
Units are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).
Binary prefixes can be used, too: KiB=K, MiB=M, and so on.

The TIME_STYLE argument can be full-iso, long-iso, iso, locale, or +FORMAT.
FORMAT is interpreted like in date(1).  If FORMAT is FORMAT1<newline>FORMAT2,
then FORMAT1 applies to non-recent files and FORMAT2 to recent files.
TIME_STYLE prefixed with 'posix-' takes effect only outside the POSIX locale.
Also the TIME_STYLE environment variable sets the default style to use.

Using color to distinguish file types is disabled both by default and
with --color=never.  With --color=auto, ls emits color codes only when
standard output is connected to a terminal.  The LS_COLORS environment
variable can change the settings.  Use the dircolors command to set it.

Exit status:
 0  if OK,
 1  if minor problems (e.g., cannot access subdirectory),
 2  if serious trouble (e.g., cannot access command-line argument).

GNU coreutils online help: <https://www.gnu.org/software/coreutils/>
Full documentation <https://www.gnu.org/software/coreutils/ls>
or available locally via: info '(coreutils) ls invocation'

LENOVO@Amitav_PC MINGW64 ~/desktop
$ ls -a
 ./             'eclipse.exe - Shortcut.lnk'*     'pgAdmin 4.lnk'*
 ../            'Google Chrome.lnk'*               Postman.lnk*
 µTorrent.lnk*  'Internet Download Manager.lnk'*   Slack.lnk*
 Codelogicx/    'Microsoft Teams.lnk'*             Study/
 desktop.ini    'MPC-HC x64.lnk'*                  ZeeNews.lnk*

LENOVO@Amitav_PC MINGW64 ~/desktop
$ cd study

LENOVO@Amitav_PC MINGW64 ~/desktop/study
$ cd --help
cd: cd [-L|[-P [-e]] [-@]] [dir]
    Change the shell working directory.

    Change the current directory to DIR.  The default DIR is the value of the
    HOME shell variable.

    The variable CDPATH defines the search path for the directory containing
    DIR.  Alternative directory names in CDPATH are separated by a colon (:).
    A null directory name is the same as the current directory.  If DIR begins
    with a slash (/), then CDPATH is not used.

    If the directory is not found, and the shell option `cdable_vars' is set,
    the word is assumed to be  a variable name.  If that variable has a value,
    its value is used for DIR.

    Options:
      -L        force symbolic links to be followed: resolve symbolic
                links in DIR after processing instances of `..'
      -P        use the physical directory structure without following
                symbolic links: resolve symbolic links in DIR before
                processing instances of `..'
      -e        if the -P option is supplied, and the current working
                directory cannot be determined successfully, exit with
                a non-zero status
      -@        on systems that support it, present a file with extended
                attributes as a directory containing the file attributes

    The default is to follow symbolic links, as if `-L' were specified.
    `..' is processed by removing the immediately previous pathname component
    back to a slash or the beginning of DIR.

    Exit Status:
    Returns 0 if the directory is changed, and if $PWD is set successfully when
    -P is used; non-zero otherwise.

LENOVO@Amitav_PC MINGW64 ~/desktop/study
$ ls -l
total 8
drwxr-xr-x 1 LENOVO 197609 0 Sep 11 09:22  JavaScript/
drwxr-xr-x 1 LENOVO 197609 0 Sep 13 14:34 'Node Js'/
drwxr-xr-x 1 LENOVO 197609 0 Sep 16 20:34  Pearlthought/

LENOVO@Amitav_PC MINGW64 ~/desktop/study
$ ls -l -h
total 8.0K
drwxr-xr-x 1 LENOVO 197609 0 Sep 11 09:22  JavaScript/
drwxr-xr-x 1 LENOVO 197609 0 Sep 13 14:34 'Node Js'/
drwxr-xr-x 1 LENOVO 197609 0 Sep 16 20:34  Pearlthought/

LENOVO@Amitav_PC MINGW64 ~/desktop/study
$ ls --help
Usage: ls [OPTION]... [FILE]...
List information about the FILEs (the current directory by default).
Sort entries alphabetically if none of -cftuvSUX nor --sort is specified.

Mandatory arguments to long options are mandatory for short options too.
  -a, --all                  do not ignore entries starting with .
  -A, --almost-all           do not list implied . and ..
      --author               with -l, print the author of each file
  -b, --escape               print C-style escapes for nongraphic characters
      --block-size=SIZE      with -l, scale sizes by SIZE when printing them;
                               e.g., '--block-size=M'; see SIZE format below
  -B, --ignore-backups       do not list implied entries ending with ~
  -c                         with -lt: sort by, and show, ctime (time of last
                               modification of file status information);
                               with -l: show ctime and sort by name;
                               otherwise: sort by ctime, newest first
  -C                         list entries by columns
      --color[=WHEN]         colorize the output; WHEN can be 'always' (default
                               if omitted), 'auto', or 'never'; more info below
  -d, --directory            list directories themselves, not their contents
  -D, --dired                generate output designed for Emacs' dired mode
  -f                         do not sort, enable -aU, disable -ls --color
  -F, --classify             append indicator (one of */=>@|) to entries
      --file-type            likewise, except do not append '*'
      --format=WORD          across -x, commas -m, horizontal -x, long -l,
                               single-column -1, verbose -l, vertical -C
      --full-time            like -l --time-style=full-iso
  -g                         like -l, but do not list owner
      --group-directories-first
                             group directories before files;
                               can be augmented with a --sort option, but any
                               use of --sort=none (-U) disables grouping
  -G, --no-group             in a long listing, don't print group names
  -h, --human-readable       with -l and -s, print sizes like 1K 234M 2G etc.
      --si                   likewise, but use powers of 1000 not 1024
  -H, --dereference-command-line
                             follow symbolic links listed on the command line
      --dereference-command-line-symlink-to-dir
                             follow each command line symbolic link
                               that points to a directory
      --hide=PATTERN         do not list implied entries matching shell PATTERN
                               (overridden by -a or -A)
      --hyperlink[=WHEN]     hyperlink file names; WHEN can be 'always'
                               (default if omitted), 'auto', or 'never'
      --indicator-style=WORD  append indicator with style WORD to entry names:
                               none (default), slash (-p),
                               file-type (--file-type), classify (-F)
  -i, --inode                print the index number of each file
  -I, --ignore=PATTERN       do not list implied entries matching shell PATTERN
  -k, --kibibytes            default to 1024-byte blocks for disk usage;
                               used only with -s and per directory totals
  -l                         use a long listing format
  -L, --dereference          when showing file information for a symbolic
                               link, show information for the file the link
                               references rather than for the link itself
  -m                         fill width with a comma separated list of entries
  -n, --numeric-uid-gid      like -l, but list numeric user and group IDs
  -N, --literal              print entry names without quoting
  -o                         like -l, but do not list group information
  -p, --indicator-style=slash
                             append / indicator to directories
  -q, --hide-control-chars   print ? instead of nongraphic characters
      --show-control-chars   show nongraphic characters as-is (the default,
                               unless program is 'ls' and output is a terminal)
  -Q, --quote-name           enclose entry names in double quotes
      --quoting-style=WORD   use quoting style WORD for entry names:
                               literal, locale, shell, shell-always,
                               shell-escape, shell-escape-always, c, escape
                               (overrides QUOTING_STYLE environment variable)
  -r, --reverse              reverse order while sorting
  -R, --recursive            list subdirectories recursively
  -s, --size                 print the allocated size of each file, in blocks
  -S                         sort by file size, largest first
      --sort=WORD            sort by WORD instead of name: none (-U), size (-S),
                               time (-t), version (-v), extension (-X)
      --time=WORD            change the default of using modification times;
                               access time (-u): atime, access, use;
                               change time (-c): ctime, status;
                               birth time: birth, creation;
                             with -l, WORD determines which time to show;
                             with --sort=time, sort by WORD (newest first)
      --time-style=TIME_STYLE  time/date format with -l; see TIME_STYLE below
  -t                         sort by time, newest first; see --time
  -T, --tabsize=COLS         assume tab stops at each COLS instead of 8
  -u                         with -lt: sort by, and show, access time;
                               with -l: show access time and sort by name;
                               otherwise: sort by access time, newest first
  -U                         do not sort; list entries in directory order
  -v                         natural sort of (version) numbers within text
  -w, --width=COLS           set output width to COLS.  0 means no limit
  -x                         list entries by lines instead of by columns
  -X                         sort alphabetically by entry extension
  -Z, --context              print any security context of each file
  -1                         list one file per line.  Avoid '\n' with -q or -b
      --append-exe           append .exe if cygwin magic was needed
      --help     display this help and exit
      --version  output version information and exit

The SIZE argument is an integer and optional unit (example: 10K is 10*1024).
Units are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).
Binary prefixes can be used, too: KiB=K, MiB=M, and so on.

The TIME_STYLE argument can be full-iso, long-iso, iso, locale, or +FORMAT.
FORMAT is interpreted like in date(1).  If FORMAT is FORMAT1<newline>FORMAT2,
then FORMAT1 applies to non-recent files and FORMAT2 to recent files.
TIME_STYLE prefixed with 'posix-' takes effect only outside the POSIX locale.
Also the TIME_STYLE environment variable sets the default style to use.

Using color to distinguish file types is disabled both by default and
with --color=never.  With --color=auto, ls emits color codes only when
standard output is connected to a terminal.  The LS_COLORS environment
variable can change the settings.  Use the dircolors command to set it.

Exit status:
 0  if OK,
 1  if minor problems (e.g., cannot access subdirectory),
 2  if serious trouble (e.g., cannot access command-line argument).

GNU coreutils online help: <https://www.gnu.org/software/coreutils/>
Full documentation <https://www.gnu.org/software/coreutils/ls>
or available locally via: info '(coreutils) ls invocation'

LENOVO@Amitav_PC MINGW64 ~/desktop/study
$ ls
 JavaScript/  'Node Js'/   Pearlthought/

LENOVO@Amitav_PC MINGW64 ~/desktop/study
$ cd ^C

LENOVO@Amitav_PC MINGW64 ~/desktop/study
$ cd

LENOVO@Amitav_PC MINGW64 ~
$ cd

LENOVO@Amitav_PC MINGW64 ~
$ cd pearlthought
bash: cd: pearlthought: No such file or directory

LENOVO@Amitav_PC MINGW64 ~
$ cd Pearlthought
bash: cd: Pearlthought: No such file or directory

LENOVO@Amitav_PC MINGW64 ~
$ cd Pearlthought/
bash: cd: Pearlthought/: No such file or directory

LENOVO@Amitav_PC MINGW64 ~
$ ls
'3D Objects'/
 AndroidStudioProjects/
 AppData/
'Application Data'@
 bluej/
 Contacts/
 Cookies@
 db.rsp
 Desktop/
 Documents/
 Downloads/
 eclipse-workspace/
 Favorites/
 git/
 IntelGraphicsProfiles/
 Links/
'Local Settings'@
 MicrosoftEdgeBackups/
 Music/
'My Documents'@
 NetHood@
 NTUSER.DAT
 ntuser.dat.LOG1
 ntuser.dat.LOG2
 NTUSER.DAT{bbc887bc-8539-11eb-93b9-bcad4d92810e}.TM.blf
 NTUSER.DAT{bbc887bc-8539-11eb-93b9-bcad4d92810e}.TMContainer00000000000000000001.regtrans-ms
 NTUSER.DAT{bbc887bc-8539-11eb-93b9-bcad4d92810e}.TMContainer00000000000000000002.regtrans-ms
 ntuser.ini
 OneDrive/
 Oracle/
 Pictures/
 Postman/
 PrintHood@
 Recent@
'Saved Games'/
 Searches/
 SendTo@
'Start Menu'@
 Templates@
 Videos/

LENOVO@Amitav_PC MINGW64 ~
$ ls -h
'3D Objects'/
 AndroidStudioProjects/
 AppData/
'Application Data'@
 bluej/
 Contacts/
 Cookies@
 db.rsp
 Desktop/
 Documents/
 Downloads/
 eclipse-workspace/
 Favorites/
 git/
 IntelGraphicsProfiles/
 Links/
'Local Settings'@
 MicrosoftEdgeBackups/
 Music/
'My Documents'@
 NetHood@
 NTUSER.DAT
 ntuser.dat.LOG1
 ntuser.dat.LOG2
 NTUSER.DAT{bbc887bc-8539-11eb-93b9-bcad4d92810e}.TM.blf
 NTUSER.DAT{bbc887bc-8539-11eb-93b9-bcad4d92810e}.TMContainer00000000000000000001.regtrans-ms
 NTUSER.DAT{bbc887bc-8539-11eb-93b9-bcad4d92810e}.TMContainer00000000000000000002.regtrans-ms
 ntuser.ini
 OneDrive/
 Oracle/
 Pictures/
 Postman/
 PrintHood@
 Recent@
'Saved Games'/
 Searches/
 SendTo@
'Start Menu'@
 Templates@
 Videos/

LENOVO@Amitav_PC MINGW64 ~
$ cd deskto/study/pearlthrought
bash: cd: deskto/study/pearlthrought: No such file or directory

LENOVO@Amitav_PC MINGW64 ~
$ cd desktop/study/pearlthrought
bash: cd: desktop/study/pearlthrought: No such file or directory

LENOVO@Amitav_PC MINGW64 ~
$ pwd
/c/Users/LENOVO

LENOVO@Amitav_PC MINGW64 ~
$ cd desktop\study\pearlthrought
bash: cd: desktopstudypearlthrought: No such file or directory

LENOVO@Amitav_PC MINGW64 ~
$ cd desktop/Study/pearlthrought
bash: cd: desktop/Study/pearlthrought: No such file or directory

LENOVO@Amitav_PC MINGW64 ~
$ cd desltop
bash: cd: desltop: No such file or directory

LENOVO@Amitav_PC MINGW64 ~
$ cd desktop

LENOVO@Amitav_PC MINGW64 ~/desktop
$ cd study

LENOVO@Amitav_PC MINGW64 ~/desktop/study
$ cd pearlthrought
bash: cd: pearlthrought: No such file or directory

LENOVO@Amitav_PC MINGW64 ~/desktop/study
$ cd pearlthought

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought
$ ls -l
total 3
-rw-r--r-- 1 LENOVO 197609  13 Sep  3 12:19 'General Info.txt'
-rw-r--r-- 1 LENOVO 197609 493 Sep 16 20:53  Git.txt
drwxr-xr-x 1 LENOVO 197609   0 Sep  4 12:47  Jira/
-rw-r--r-- 1 LENOVO 197609  88 Sep  4 11:41  Jira.txt

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought
$ gedit
bash: gedit: command not found

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought
$ mkdir hello

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought
$ rmdir hello

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought
$ ls -l
total 3
-rw-r--r-- 1 LENOVO 197609  13 Sep  3 12:19 'General Info.txt'
-rw-r--r-- 1 LENOVO 197609 493 Sep 16 20:53  Git.txt
drwxr-xr-x 1 LENOVO 197609   0 Sep  4 12:47  Jira/
-rw-r--r-- 1 LENOVO 197609  88 Sep  4 11:41  Jira.txt

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought
$ rm --help
Usage: rm [OPTION]... [FILE]...
Remove (unlink) the FILE(s).

  -f, --force           ignore nonexistent files and arguments, never prompt
  -i                    prompt before every removal
  -I                    prompt once before removing more than three files, or
                          when removing recursively; less intrusive than -i,
                          while still giving protection against most mistakes
      --interactive[=WHEN]  prompt according to WHEN: never, once (-I), or
                          always (-i); without WHEN, prompt always
      --one-file-system  when removing a hierarchy recursively, skip any
                          directory that is on a file system different from
                          that of the corresponding command line argument
      --no-preserve-root  do not treat '/' specially
      --preserve-root[=all]  do not remove '/' (default);
                              with 'all', reject any command line argument
                              on a separate device from its parent
  -r, -R, --recursive   remove directories and their contents recursively
  -d, --dir             remove empty directories
  -v, --verbose         explain what is being done
      --help     display this help and exit
      --version  output version information and exit

By default, rm does not remove directories.  Use the --recursive (-r or -R)
option to remove each listed directory, too, along with all of its contents.

To remove a file whose name starts with a '-', for example '-foo',
use one of these commands:
  rm -- -foo

  rm ./-foo

Note that if you use rm to remove a file, it might be possible to recover
some of its contents, given sufficient expertise and/or time.  For greater
assurance that the contents are truly unrecoverable, consider using shred.

GNU coreutils online help: <https://www.gnu.org/software/coreutils/>
Full documentation <https://www.gnu.org/software/coreutils/rm>
or available locally via: info '(coreutils) rm invocation'

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought
$ mkdir Demo

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought
$ cd Demo

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ dir

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ pwd
/c/Users/LENOVO/desktop/study/pearlthought/Demo

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ touch hello.txt

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ ls -l
total 0
-rw-r--r-- 1 LENOVO 197609 0 Sep 16 21:12 hello.txt

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ touch --help
Usage: touch [OPTION]... FILE...
Update the access and modification times of each FILE to the current time.

A FILE argument that does not exist is created empty, unless -c or -h
is supplied.

A FILE argument string of - is handled specially and causes touch to
change the times of the file associated with standard output.

Mandatory arguments to long options are mandatory for short options too.
  -a                     change only the access time
  -c, --no-create        do not create any files
  -d, --date=STRING      parse STRING and use it instead of current time
  -f                     (ignored)
  -h, --no-dereference   affect each symbolic link instead of any referenced
                         file (useful only on systems that can change the
                         timestamps of a symlink)
  -m                     change only the modification time
  -r, --reference=FILE   use this file's times instead of current time
  -t STAMP               use [[CC]YY]MMDDhhmm[.ss] instead of current time
      --time=WORD        change the specified time:
                           WORD is access, atime, or use: equivalent to -a
                           WORD is modify or mtime: equivalent to -m
      --help     display this help and exit
      --version  output version information and exit

Note that the -d and -t options accept different time-date formats.

GNU coreutils online help: <https://www.gnu.org/software/coreutils/>
Full documentation <https://www.gnu.org/software/coreutils/touch>
or available locally via: info '(coreutils) touch invocation'

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ who

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ cp --h
Usage: cp [OPTION]... [-T] SOURCE DEST
  or:  cp [OPTION]... SOURCE... DIRECTORY
  or:  cp [OPTION]... -t DIRECTORY SOURCE...
Copy SOURCE to DEST, or multiple SOURCE(s) to DIRECTORY.

Mandatory arguments to long options are mandatory for short options too.
  -a, --archive                same as -dR --preserve=all
      --attributes-only        don't copy the file data, just the attributes
      --backup[=CONTROL]       make a backup of each existing destination file
  -b                           like --backup but does not accept an argument
      --copy-contents          copy contents of special files when recursive
  -d                           same as --no-dereference --preserve=links
  -f, --force                  if an existing destination file cannot be
                                 opened, remove it and try again (this option
                                 is ignored when the -n option is also used)
  -i, --interactive            prompt before overwrite (overrides a previous -n
                                  option)
  -H                           follow command-line symbolic links in SOURCE
  -l, --link                   hard link files instead of copying
  -L, --dereference            always follow symbolic links in SOURCE
  -n, --no-clobber             do not overwrite an existing file (overrides
                                 a previous -i option)
  -P, --no-dereference         never follow symbolic links in SOURCE
  -p                           same as --preserve=mode,ownership,timestamps
      --preserve[=ATTR_LIST]   preserve the specified attributes (default:
                                 mode,ownership,timestamps), if possible
                                 additional attributes: context, links, xattr,
                                 all
      --no-preserve=ATTR_LIST  don't preserve the specified attributes
      --parents                use full source file name under DIRECTORY
  -R, -r, --recursive          copy directories recursively
      --reflink[=WHEN]         control clone/CoW copies. See below
      --remove-destination     remove each existing destination file before
                                 attempting to open it (contrast with --force)
      --sparse=WHEN            control creation of sparse files. See below
      --strip-trailing-slashes  remove any trailing slashes from each SOURCE
                                 argument
  -s, --symbolic-link          make symbolic links instead of copying
  -S, --suffix=SUFFIX          override the usual backup suffix
  -t, --target-directory=DIRECTORY  copy all SOURCE arguments into DIRECTORY
  -T, --no-target-directory    treat DEST as a normal file
  -u, --update                 copy only when the SOURCE file is newer
                                 than the destination file or when the
                                 destination file is missing
  -v, --verbose                explain what is being done
  -x, --one-file-system        stay on this file system
  -Z                           set SELinux security context of destination
                                 file to default type
      --context[=CTX]          like -Z, or if CTX is specified then set the
                                 SELinux or SMACK security context to CTX
      --help     display this help and exit
      --version  output version information and exit

By default, sparse SOURCE files are detected by a crude heuristic and the
corresponding DEST file is made sparse as well.  That is the behavior
selected by --sparse=auto.  Specify --sparse=always to create a sparse DEST
file whenever the SOURCE file contains a long enough sequence of zero bytes.
Use --sparse=never to inhibit creation of sparse files.

When --reflink[=always] is specified, perform a lightweight copy, where the
data blocks are copied only when modified.  If this is not possible the copy
fails, or if --reflink=auto is specified, fall back to a standard copy.
Use --reflink=never to ensure a standard copy is performed.

The backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.
The version control method may be selected via the --backup option or through
the VERSION_CONTROL environment variable.  Here are the values:

  none, off       never make backups (even if --backup is given)
  numbered, t     make numbered backups
  existing, nil   numbered if numbered backups exist, simple otherwise
  simple, never   always make simple backups

As a special case, cp makes a backup of SOURCE when the force and backup
options are given and SOURCE and DEST are the same name for an existing,
regular file.

GNU coreutils online help: <https://www.gnu.org/software/coreutils/>
Full documentation <https://www.gnu.org/software/coreutils/cp>
or available locally via: info '(coreutils) cp invocation'

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ ls -l
total 0
-rw-r--r-- 1 LENOVO 197609 0 Sep 16 21:12 hello.txt

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ cat hello.txt

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ cat -m hello.txt
cat: unknown option -- m
Try 'cat --help' for more information.

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ cat --m hello.txt
cat: unknown option -- m
Try 'cat --help' for more information.

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ cat --h
Usage: cat [OPTION]... [FILE]...
Concatenate FILE(s) to standard output.

With no FILE, or when FILE is -, read standard input.

  -A, --show-all           equivalent to -vET
  -b, --number-nonblank    number nonempty output lines, overrides -n
  -e                       equivalent to -vE
  -E, --show-ends          display $ at end of each line
  -n, --number             number all output lines
  -s, --squeeze-blank      suppress repeated empty output lines
  -t                       equivalent to -vT
  -T, --show-tabs          display TAB characters as ^I
  -u                       (ignored)
  -v, --show-nonprinting   use ^ and M- notation, except for LFD and TAB
      --help     display this help and exit
      --version  output version information and exit

Examples:
  cat f - g  Output f's contents, then standard input, then g's contents.
  cat        Copy standard input to standard output.

GNU coreutils online help: <https://www.gnu.org/software/coreutils/>
Full documentation <https://www.gnu.org/software/coreutils/cat>
or available locally via: info '(coreutils) cat invocation'

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ cat -n hello.txt

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ cat --n hello.txt
cat: ambiguous option -- n
Try 'cat --help' for more information.

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ cat -n hello.txt

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ cat >> Hello.txt
Hello Amitav
I am from malda.
how are you?
[1]+  Stopped                 cat >> Hello.txt

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ cat -n hello.txt
     1  Hello Amitav
     2  I am from malda.

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ cat >> Hello.txt
How are you?

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ cat -n hello.txt
     1  Hello Amitav
     2  I am from malda.

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ cat Hello.txt
Hello Amitav
I am from malda.

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ cat >>hello.txt
How are you?


LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ cat -n hello.txt
     1  Hello Amitav
     2  I am from malda.
     3  How are you?

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ df
Filesystem           1K-blocks      Used Available Use% Mounted on
C:/Program Files/Git 423868412 286200164 137668248  68% /
D:                    26214396  17053340   9161056  66% /d
E:                   315620348 194758804 120861544  62% /e
F:                   209748988 168098892  41650096  81% /f

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ df --h
df: ambiguous option -- h
Try 'df --help' for more information.

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ df -h
Filesystem            Size  Used Avail Use% Mounted on
C:/Program Files/Git  405G  273G  132G  68% /
D:                     25G   17G  8.8G  66% /d
E:                    301G  186G  116G  62% /e
F:                    201G  161G   40G  81% /f

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ df --help
Usage: df [OPTION]... [FILE]...
Show information about the file system on which each FILE resides,
or all file systems by default.

Mandatory arguments to long options are mandatory for short options too.
  -a, --all             include pseudo, duplicate, inaccessible file systems
  -B, --block-size=SIZE  scale sizes by SIZE before printing them; e.g.,
                           '-BM' prints sizes in units of 1,048,576 bytes;
                           see SIZE format below
  -h, --human-readable  print sizes in powers of 1024 (e.g., 1023M)
  -H, --si              print sizes in powers of 1000 (e.g., 1.1G)
  -i, --inodes          list inode information instead of block usage
  -k                    like --block-size=1K
  -l, --local           limit listing to local file systems
      --no-sync         do not invoke sync before getting usage info (default)
      --output[=FIELD_LIST]  use the output format defined by FIELD_LIST,
                               or print all fields if FIELD_LIST is omitted.
  -P, --portability     use the POSIX output format
      --sync            invoke sync before getting usage info
      --total           elide all entries insignificant to available space,
                          and produce a grand total
  -t, --type=TYPE       limit listing to file systems of type TYPE
  -T, --print-type      print file system type
  -x, --exclude-type=TYPE   limit listing to file systems not of type TYPE
  -v                    (ignored)
      --help     display this help and exit
      --version  output version information and exit

Display values are in units of the first available SIZE from --block-size,
and the DF_BLOCK_SIZE, BLOCK_SIZE and BLOCKSIZE environment variables.
Otherwise, units default to 1024 bytes (or 512 if POSIXLY_CORRECT is set).

The SIZE argument is an integer and optional unit (example: 10K is 10*1024).
Units are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).
Binary prefixes can be used, too: KiB=K, MiB=M, and so on.

FIELD_LIST is a comma-separated list of columns to be included.  Valid
field names are: 'source', 'fstype', 'itotal', 'iused', 'iavail', 'ipcent',
'size', 'used', 'avail', 'pcent', 'file' and 'target' (see info page).

GNU coreutils online help: <https://www.gnu.org/software/coreutils/>
Full documentation <https://www.gnu.org/software/coreutils/df>
or available locally via: info '(coreutils) df invocation'

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ tree
bash: tree: command not found

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ dir --help
Usage: dir [OPTION]... [FILE]...
List information about the FILEs (the current directory by default).
Sort entries alphabetically if none of -cftuvSUX nor --sort is specified.

Mandatory arguments to long options are mandatory for short options too.
  -a, --all                  do not ignore entries starting with .
  -A, --almost-all           do not list implied . and ..
      --author               with -l, print the author of each file
  -b, --escape               print C-style escapes for nongraphic characters
      --block-size=SIZE      with -l, scale sizes by SIZE when printing them;
                               e.g., '--block-size=M'; see SIZE format below
  -B, --ignore-backups       do not list implied entries ending with ~
  -c                         with -lt: sort by, and show, ctime (time of last
                               modification of file status information);
                               with -l: show ctime and sort by name;
                               otherwise: sort by ctime, newest first
  -C                         list entries by columns
      --color[=WHEN]         colorize the output; WHEN can be 'always' (default
                               if omitted), 'auto', or 'never'; more info below
  -d, --directory            list directories themselves, not their contents
  -D, --dired                generate output designed for Emacs' dired mode
  -f                         do not sort, enable -aU, disable -ls --color
  -F, --classify             append indicator (one of */=>@|) to entries
      --file-type            likewise, except do not append '*'
      --format=WORD          across -x, commas -m, horizontal -x, long -l,
                               single-column -1, verbose -l, vertical -C
      --full-time            like -l --time-style=full-iso
  -g                         like -l, but do not list owner
      --group-directories-first
                             group directories before files;
                               can be augmented with a --sort option, but any
                               use of --sort=none (-U) disables grouping
  -G, --no-group             in a long listing, don't print group names
  -h, --human-readable       with -l and -s, print sizes like 1K 234M 2G etc.
      --si                   likewise, but use powers of 1000 not 1024
  -H, --dereference-command-line
                             follow symbolic links listed on the command line
      --dereference-command-line-symlink-to-dir
                             follow each command line symbolic link
                               that points to a directory
      --hide=PATTERN         do not list implied entries matching shell PATTERN
                               (overridden by -a or -A)
      --hyperlink[=WHEN]     hyperlink file names; WHEN can be 'always'
                               (default if omitted), 'auto', or 'never'
      --indicator-style=WORD  append indicator with style WORD to entry names:
                               none (default), slash (-p),
                               file-type (--file-type), classify (-F)
  -i, --inode                print the index number of each file
  -I, --ignore=PATTERN       do not list implied entries matching shell PATTERN
  -k, --kibibytes            default to 1024-byte blocks for disk usage;
                               used only with -s and per directory totals
  -l                         use a long listing format
  -L, --dereference          when showing file information for a symbolic
                               link, show information for the file the link
                               references rather than for the link itself
  -m                         fill width with a comma separated list of entries
  -n, --numeric-uid-gid      like -l, but list numeric user and group IDs
  -N, --literal              print entry names without quoting
  -o                         like -l, but do not list group information
  -p, --indicator-style=slash
                             append / indicator to directories
  -q, --hide-control-chars   print ? instead of nongraphic characters
      --show-control-chars   show nongraphic characters as-is (the default,
                               unless program is 'ls' and output is a terminal)
  -Q, --quote-name           enclose entry names in double quotes
      --quoting-style=WORD   use quoting style WORD for entry names:
                               literal, locale, shell, shell-always,
                               shell-escape, shell-escape-always, c, escape
                               (overrides QUOTING_STYLE environment variable)
  -r, --reverse              reverse order while sorting
  -R, --recursive            list subdirectories recursively
  -s, --size                 print the allocated size of each file, in blocks
  -S                         sort by file size, largest first
      --sort=WORD            sort by WORD instead of name: none (-U), size (-S),
                               time (-t), version (-v), extension (-X)
      --time=WORD            change the default of using modification times;
                               access time (-u): atime, access, use;
                               change time (-c): ctime, status;
                               birth time: birth, creation;
                             with -l, WORD determines which time to show;
                             with --sort=time, sort by WORD (newest first)
      --time-style=TIME_STYLE  time/date format with -l; see TIME_STYLE below
  -t                         sort by time, newest first; see --time
  -T, --tabsize=COLS         assume tab stops at each COLS instead of 8
  -u                         with -lt: sort by, and show, access time;
                               with -l: show access time and sort by name;
                               otherwise: sort by access time, newest first
  -U                         do not sort; list entries in directory order
  -v                         natural sort of (version) numbers within text
  -w, --width=COLS           set output width to COLS.  0 means no limit
  -x                         list entries by lines instead of by columns
  -X                         sort alphabetically by entry extension
  -Z, --context              print any security context of each file
  -1                         list one file per line.  Avoid '\n' with -q or -b
      --append-exe           append .exe if cygwin magic was needed
      --help     display this help and exit
      --version  output version information and exit

The SIZE argument is an integer and optional unit (example: 10K is 10*1024).
Units are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).
Binary prefixes can be used, too: KiB=K, MiB=M, and so on.

The TIME_STYLE argument can be full-iso, long-iso, iso, locale, or +FORMAT.
FORMAT is interpreted like in date(1).  If FORMAT is FORMAT1<newline>FORMAT2,
then FORMAT1 applies to non-recent files and FORMAT2 to recent files.
TIME_STYLE prefixed with 'posix-' takes effect only outside the POSIX locale.
Also the TIME_STYLE environment variable sets the default style to use.

Using color to distinguish file types is disabled both by default and
with --color=never.  With --color=auto, ls emits color codes only when
standard output is connected to a terminal.  The LS_COLORS environment
variable can change the settings.  Use the dircolors command to set it.

Exit status:
 0  if OK,
 1  if minor problems (e.g., cannot access subdirectory),
 2  if serious trouble (e.g., cannot access command-line argument).

GNU coreutils online help: <https://www.gnu.org/software/coreutils/>
Full documentation <https://www.gnu.org/software/coreutils/dir>
or available locally via: info '(coreutils) dir invocation'

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ tree --help
bash: tree: command not found

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ dif --help
bash: dif: command not found

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ dif -m
bash: dif: command not found

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ df --help
Usage: df [OPTION]... [FILE]...
Show information about the file system on which each FILE resides,
or all file systems by default.

Mandatory arguments to long options are mandatory for short options too.
  -a, --all             include pseudo, duplicate, inaccessible file systems
  -B, --block-size=SIZE  scale sizes by SIZE before printing them; e.g.,
                           '-BM' prints sizes in units of 1,048,576 bytes;
                           see SIZE format below
  -h, --human-readable  print sizes in powers of 1024 (e.g., 1023M)
  -H, --si              print sizes in powers of 1000 (e.g., 1.1G)
  -i, --inodes          list inode information instead of block usage
  -k                    like --block-size=1K
  -l, --local           limit listing to local file systems
      --no-sync         do not invoke sync before getting usage info (default)
      --output[=FIELD_LIST]  use the output format defined by FIELD_LIST,
                               or print all fields if FIELD_LIST is omitted.
  -P, --portability     use the POSIX output format
      --sync            invoke sync before getting usage info
      --total           elide all entries insignificant to available space,
                          and produce a grand total
  -t, --type=TYPE       limit listing to file systems of type TYPE
  -T, --print-type      print file system type
  -x, --exclude-type=TYPE   limit listing to file systems not of type TYPE
  -v                    (ignored)
      --help     display this help and exit
      --version  output version information and exit

Display values are in units of the first available SIZE from --block-size,
and the DF_BLOCK_SIZE, BLOCK_SIZE and BLOCKSIZE environment variables.
Otherwise, units default to 1024 bytes (or 512 if POSIXLY_CORRECT is set).

The SIZE argument is an integer and optional unit (example: 10K is 10*1024).
Units are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).
Binary prefixes can be used, too: KiB=K, MiB=M, and so on.

FIELD_LIST is a comma-separated list of columns to be included.  Valid
field names are: 'source', 'fstype', 'itotal', 'iused', 'iavail', 'ipcent',
'size', 'used', 'avail', 'pcent', 'file' and 'target' (see info page).

GNU coreutils online help: <https://www.gnu.org/software/coreutils/>
Full documentation <https://www.gnu.org/software/coreutils/df>
or available locally via: info '(coreutils) df invocation'

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ df -m
Filesystem           1M-blocks   Used Available Use% Mounted on
C:/Program Files/Git    413934 279494    134441  68% /
D:                       25600  16654      8947  66% /d
E:                      308223 190195    118029  62% /e
F:                      204833 164160     40674  81% /f

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ uname
MINGW64_NT-10.0-19042

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ uname -a
MINGW64_NT-10.0-19042 Amitav_PC 3.1.6-340.x86_64 2020-07-09 14:33 UTC x86_64 Msys

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ hostname
Amitav_PC

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ hostname -i
hostname: unknown option -- i
Try 'hostname --help' for more information.

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ hostname --help
Usage: hostname [NAME]
  or:  hostname OPTION
Print or set the hostname of the current system.

      --help     display this help and exit
      --version  output version information and exit

GNU coreutils online help: <https://www.gnu.org/software/coreutils/>
Full documentation <https://www.gnu.org/software/coreutils/hostname>
or available locally via: info '(coreutils) hostname invocation'

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ hostname -i
hostname: unknown option -- i
Try 'hostname --help' for more information.

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ hostname --i
hostname: unknown option -- i
Try 'hostname --help' for more information.

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ touch next.txt

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ cat >> next.txt
Frome next.txt


LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ cat next.txt
Frome naxt xt

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ cp next.txt hello.next

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ cat hello.txt
Hello Amitav
I am from malda.
How are you?

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ cat next.txt
Frome naxt xt

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ cp next hello
cp: cannot stat 'next': No such file or directory

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ cat hello.txt
Hello Amitav
I am from malda.
How are you?

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ cp --help
Usage: cp [OPTION]... [-T] SOURCE DEST
  or:  cp [OPTION]... SOURCE... DIRECTORY
  or:  cp [OPTION]... -t DIRECTORY SOURCE...
Copy SOURCE to DEST, or multiple SOURCE(s) to DIRECTORY.

Mandatory arguments to long options are mandatory for short options too.
  -a, --archive                same as -dR --preserve=all
      --attributes-only        don't copy the file data, just the attributes
      --backup[=CONTROL]       make a backup of each existing destination file
  -b                           like --backup but does not accept an argument
      --copy-contents          copy contents of special files when recursive
  -d                           same as --no-dereference --preserve=links
  -f, --force                  if an existing destination file cannot be
                                 opened, remove it and try again (this option
                                 is ignored when the -n option is also used)
  -i, --interactive            prompt before overwrite (overrides a previous -n
                                  option)
  -H                           follow command-line symbolic links in SOURCE
  -l, --link                   hard link files instead of copying
  -L, --dereference            always follow symbolic links in SOURCE
  -n, --no-clobber             do not overwrite an existing file (overrides
                                 a previous -i option)
  -P, --no-dereference         never follow symbolic links in SOURCE
  -p                           same as --preserve=mode,ownership,timestamps
      --preserve[=ATTR_LIST]   preserve the specified attributes (default:
                                 mode,ownership,timestamps), if possible
                                 additional attributes: context, links, xattr,
                                 all
      --no-preserve=ATTR_LIST  don't preserve the specified attributes
      --parents                use full source file name under DIRECTORY
  -R, -r, --recursive          copy directories recursively
      --reflink[=WHEN]         control clone/CoW copies. See below
      --remove-destination     remove each existing destination file before
                                 attempting to open it (contrast with --force)
      --sparse=WHEN            control creation of sparse files. See below
      --strip-trailing-slashes  remove any trailing slashes from each SOURCE
                                 argument
  -s, --symbolic-link          make symbolic links instead of copying
  -S, --suffix=SUFFIX          override the usual backup suffix
  -t, --target-directory=DIRECTORY  copy all SOURCE arguments into DIRECTORY
  -T, --no-target-directory    treat DEST as a normal file
  -u, --update                 copy only when the SOURCE file is newer
                                 than the destination file or when the
                                 destination file is missing
  -v, --verbose                explain what is being done
  -x, --one-file-system        stay on this file system
  -Z                           set SELinux security context of destination
                                 file to default type
      --context[=CTX]          like -Z, or if CTX is specified then set the
                                 SELinux or SMACK security context to CTX
      --help     display this help and exit
      --version  output version information and exit

By default, sparse SOURCE files are detected by a crude heuristic and the
corresponding DEST file is made sparse as well.  That is the behavior
selected by --sparse=auto.  Specify --sparse=always to create a sparse DEST
file whenever the SOURCE file contains a long enough sequence of zero bytes.
Use --sparse=never to inhibit creation of sparse files.

When --reflink[=always] is specified, perform a lightweight copy, where the
data blocks are copied only when modified.  If this is not possible the copy
fails, or if --reflink=auto is specified, fall back to a standard copy.
Use --reflink=never to ensure a standard copy is performed.

The backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.
The version control method may be selected via the --backup option or through
the VERSION_CONTROL environment variable.  Here are the values:

  none, off       never make backups (even if --backup is given)
  numbered, t     make numbered backups
  existing, nil   numbered if numbered backups exist, simple otherwise
  simple, never   always make simple backups

As a special case, cp makes a backup of SOURCE when the force and backup
options are given and SOURCE and DEST are the same name for an existing,
regular file.

GNU coreutils online help: <https://www.gnu.org/software/coreutils/>
Full documentation <https://www.gnu.org/software/coreutils/cp>
or available locally via: info '(coreutils) cp invocation'

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ cat hello.txt
Hello Amitav
I am from malda.
How are you?

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ cp hello next
cp: cannot stat 'hello': No such file or directory

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ cp hello.txt next.txt

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$ cat next.txt
Hello Amitav
I am from malda.
How are you?

LENOVO@Amitav_PC MINGW64 ~/desktop/study/pearlthought/Demo
$
